<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for Plugins">
	<description>Generally-applicable sniffs for WordPress plugins</description>

	<!-- Check all PHP files in directory tree by default. -->
	<arg name="extensions" value="php"/>
	<file>.</file>

	<!-- Show progress and sniff codes in all reports -->
	<arg value="ps"/>

	<rule ref="Pantheon-WP">
		<!-- Ignore all of the VIP rules. These mostly deal with sessions, and that's explicitly what this plugin does. -->
		<exclude name="WordPressVIPMinimum" />
	</rule>
	<rule ref="WordPress-Docs" />
	<rule ref="PHPCompatibility"/>

	<!-- Minimum PHP and WP versions -->
	<config name="testVersion" value="7.1-"/>
	<config name="minimum_supported_wp_version" value="4.6"/>

	<exclude-pattern>*/bin/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>

	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<exclude-pattern>*/pantheon-sessions.php</exclude-pattern>
		<exclude-pattern>*/tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid">
		<exclude-pattern>*/pantheon-sessions.php</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
		<exclude-pattern>*/inc/class-cli-command.php</exclude-pattern>
	</rule>

	<!-- Ignoring the either function declarations or structure declarations sniff for the main plugin file. This probably isn't best practice and the function should probably be defined in a separate file, but the function is just an implementation of the class to get the plugin started. -->
	<rule ref="Universal.Files.SeparateFunctionsFromOO.Mixed">
		<exclude-pattern>*/pantheon-sessions.php</exclude-pattern>
	</rule>
</ruleset>
